<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0728.2252                               -->
<workbook original-version='10.3' source-build='10.3.2 (10300.17.0728.2252)' source-platform='mac' version='10.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Week01-FlightsDelay' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='airlines+' inline='true' name='federated.10xxac50fd7r421c0xwvi05317j9' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='airlines' name='textscan.0ufz37a0o8qitw19bvnh109hcuep'>
            <connection class='textscan' directory='/Users/uma/Desktop/school/2017FALL/Data_Acquisition_IS362/week01/flights' filename='airlines.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[airlines.csv].[carrier]' />
              <expression op='[flights.csv].[carrier]' />
            </expression>
          </clause>
          <relation connection='textscan.0ufz37a0o8qitw19bvnh109hcuep' name='airlines.csv' table='[airlines#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='carrier' ordinal='0' />
              <column datatype='string' name='name' ordinal='1' />
            </columns>
          </relation>
          <relation connection='textscan.0ufz37a0o8qitw19bvnh109hcuep' name='flights.csv' table='[flights#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='year' ordinal='0' />
              <column datatype='integer' name='month' ordinal='1' />
              <column datatype='integer' name='day' ordinal='2' />
              <column datatype='integer' name='dep_time' ordinal='3' />
              <column datatype='integer' name='dep_delay' ordinal='4' />
              <column datatype='integer' name='arr_time' ordinal='5' />
              <column datatype='integer' name='arr_delay' ordinal='6' />
              <column datatype='string' name='carrier' ordinal='7' />
              <column datatype='string' name='tailnum' ordinal='8' />
              <column datatype='integer' name='flight' ordinal='9' />
              <column datatype='string' name='origin' ordinal='10' />
              <column datatype='string' name='dest' ordinal='11' />
              <column datatype='integer' name='air_time' ordinal='12' />
              <column datatype='integer' name='distance' ordinal='13' />
              <column datatype='integer' name='hour' ordinal='14' />
              <column datatype='integer' name='minute' ordinal='15' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[air_time]' value='[flights.csv].[air_time]' />
          <map key='[arr_delay]' value='[flights.csv].[arr_delay]' />
          <map key='[arr_time]' value='[flights.csv].[arr_time]' />
          <map key='[carrier (flights.csv)]' value='[flights.csv].[carrier]' />
          <map key='[carrier]' value='[airlines.csv].[carrier]' />
          <map key='[day]' value='[flights.csv].[day]' />
          <map key='[dep_delay]' value='[flights.csv].[dep_delay]' />
          <map key='[dep_time]' value='[flights.csv].[dep_time]' />
          <map key='[dest]' value='[flights.csv].[dest]' />
          <map key='[distance]' value='[flights.csv].[distance]' />
          <map key='[flight]' value='[flights.csv].[flight]' />
          <map key='[hour]' value='[flights.csv].[hour]' />
          <map key='[minute]' value='[flights.csv].[minute]' />
          <map key='[month]' value='[flights.csv].[month]' />
          <map key='[name]' value='[airlines.csv].[name]' />
          <map key='[origin]' value='[flights.csv].[origin]' />
          <map key='[tailnum]' value='[flights.csv].[tailnum]' />
          <map key='[year]' value='[flights.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[airlines.csv]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[airlines.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[airlines.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>20</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dep_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dep_time]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>dep_time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dep_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dep_delay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>dep_delay</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_time]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>arr_time</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>129</remote-type>
            <local-name>[carrier (flights.csv)]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tailnum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tailnum]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>tailnum</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[flight]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>flight</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>origin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[origin]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>origin</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dest</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dest]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>dest</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>air_time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[air_time]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>air_time</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>20</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>distance</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hour]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>hour</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minute</remote-name>
            <remote-type>20</remote-type>
            <local-name>[minute]</local-name>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias>minute</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[flights.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' hidden='true' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Air Time' datatype='integer' hidden='true' name='[air_time]' role='measure' type='quantitative' />
      <column caption='Arr Delay' datatype='integer' hidden='true' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Arr Time' datatype='integer' hidden='true' name='[arr_time]' role='measure' type='quantitative' />
      <column caption='Carrier (Flights.Csv)' datatype='string' name='[carrier (flights.csv)]' role='dimension' type='nominal' />
      <column caption='Carrier' datatype='string' hidden='true' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Day' datatype='integer' hidden='true' name='[day]' role='dimension' type='quantitative' />
      <column caption='Dep Delay' datatype='integer' name='[dep_delay]' role='measure' type='quantitative' />
      <column caption='Dep Time' datatype='integer' hidden='true' name='[dep_time]' role='measure' type='quantitative' />
      <column caption='Dest' datatype='string' hidden='true' name='[dest]' role='dimension' type='nominal' />
      <column caption='Distance' datatype='integer' hidden='true' name='[distance]' role='measure' type='quantitative' />
      <column caption='Flight' datatype='integer' hidden='true' name='[flight]' role='measure' type='quantitative' />
      <column caption='Hour' datatype='integer' hidden='true' name='[hour]' role='measure' type='quantitative' />
      <column caption='Minute' datatype='integer' hidden='true' name='[minute]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' hidden='true' name='[month]' role='dimension' type='quantitative' />
      <column caption='Name' datatype='string' hidden='true' name='[name]' role='dimension' type='nominal' />
      <column caption='Origin' datatype='string' hidden='true' name='[origin]' role='dimension' type='nominal' />
      <column caption='Tailnum' datatype='string' hidden='true' name='[tailnum]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' hidden='true' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[carrier (flights.csv)]' derivation='None' name='[none:carrier (flights.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/uma/Documents/My Tableau Repository/Datasources/airlines+.tde' schema='Extract' tablename='Extract' update-time='09/04/2017 02:27:18 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[carrier (flights.csv)]' value='[Extract].[carrier]' />
            <map key='[dep_delay]' value='[Extract].[dep_delay]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='16' timestamp-start='2017-09-04 02:27:18.164' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier (flights.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier</remote-alias>
              <ordinal>0</ordinal>
              <family>flights.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;9E&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;YV&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>16</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;HA&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dep_delay</remote-name>
              <remote-type>3</remote-type>
              <local-name>[dep_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dep_delay</remote-alias>
              <ordinal>1</ordinal>
              <family>flights.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4109880.0</statistic>
                <statistic aggregation='Avg' datatype='real'>256867.5</statistic>
                <statistic aggregation='Min' datatype='integer'>365</statistic>
                <statistic aggregation='Max' datatype='integer'>1013928</statistic>
                <statistic aggregation='Stdev' datatype='real'>307892.52551087801</statistic>
                <statistic aggregation='StdevP' datatype='real'>298115.65593134321</statistic>
                <statistic aggregation='Var' datatype='real'>94797807265.46666</statistic>
                <statistic aggregation='VarP' datatype='real'>88872944311.375</statistic>
                <statistic aggregation='Count' datatype='integer'>16</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2477661709882.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='quantitative' column='[air_time]' included-values='in-range'>
          <min>20</min>
          <max>695</max>
        </filter>
        <filter class='quantitative' column='[arr_delay]' included-values='in-range'>
          <min>-86</min>
          <max>1272</max>
        </filter>
        <filter class='quantitative' column='[arr_time]' included-values='in-range'>
          <min>1</min>
          <max>2400</max>
        </filter>
        <filter class='categorical' column='[carrier (flights.csv)]'>
          <groupfilter from='&quot;9E&quot;' function='range' level='[carrier (flights.csv)]' to='&quot;YV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[carrier]'>
          <groupfilter from='&quot;9E&quot;' function='range' level='[carrier]' to='&quot;YV&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[day]' included-values='in-range'>
          <min>1</min>
          <max>31</max>
        </filter>
        <filter class='quantitative' column='[dep_delay]' included-values='in-range'>
          <min>-43</min>
          <max>1301</max>
        </filter>
        <filter class='quantitative' column='[dep_time]' included-values='in-range'>
          <min>1</min>
          <max>2400</max>
        </filter>
        <filter class='categorical' column='[dest]'>
          <groupfilter from='&quot;ABQ&quot;' function='range' level='[dest]' to='&quot;XNA&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[distance]' included-values='in-range'>
          <min>17</min>
          <max>4983</max>
        </filter>
        <filter class='quantitative' column='[flight]' included-values='in-range'>
          <min>1</min>
          <max>8500</max>
        </filter>
        <filter class='quantitative' column='[hour]' included-values='in-range'>
          <min>0</min>
          <max>24</max>
        </filter>
        <filter class='quantitative' column='[minute]' included-values='in-range'>
          <min>0</min>
          <max>59</max>
        </filter>
        <filter class='quantitative' column='[month]' included-values='in-range'>
          <min>1</min>
          <max>12</max>
        </filter>
        <filter class='categorical' column='[name]'>
          <groupfilter from='&quot;AirTran Airways Corporation&quot;' function='range' level='[name]' to='&quot;Virgin America&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[origin]'>
          <groupfilter from='&quot;EWR&quot;' function='range' level='[origin]' to='&quot;LGA&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[tailnum]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[tailnum]' member='%null%' />
            <groupfilter from='&quot;D942DN&quot;' function='range' level='[tailnum]' to='&quot;N9EAMQ&quot;' />
          </groupfilter>
        </filter>
        <filter class='quantitative' column='[year]' included-values='in-range'>
          <min>2013</min>
          <max>2013</max>
        </filter>
        <aggregation column='[Number of Records]' derivation='Sum' />
        <aggregation column='[air_time]' derivation='Sum' />
        <aggregation column='[arr_delay]' derivation='Sum' />
        <aggregation column='[arr_time]' derivation='Sum' />
        <aggregation column='[carrier (flights.csv)]' derivation='None' />
        <aggregation column='[carrier]' derivation='None' />
        <aggregation column='[day]' derivation='None' />
        <aggregation column='[dep_delay]' derivation='Sum' />
        <aggregation column='[dep_time]' derivation='Sum' />
        <aggregation column='[dest]' derivation='None' />
        <aggregation column='[distance]' derivation='Sum' />
        <aggregation column='[flight]' derivation='Sum' />
        <aggregation column='[hour]' derivation='Sum' />
        <aggregation column='[minute]' derivation='Sum' />
        <aggregation column='[month]' derivation='None' />
        <aggregation column='[name]' derivation='None' />
        <aggregation column='[origin]' derivation='None' />
        <aggregation column='[tailnum]' derivation='None' />
        <aggregation column='[year]' derivation='None' />
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.501742' measure-ordering='alphabetic' measure-percentage='0.498258' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:carrier:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:carrier (flights.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='airlines+' name='federated.10xxac50fd7r421c0xwvi05317j9' />
          </datasources>
          <datasource-dependencies datasource='federated.10xxac50fd7r421c0xwvi05317j9'>
            <column-instance column='[dep_delay]' derivation='Avg' name='[avg:dep_delay:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier (Flights.Csv)' datatype='string' name='[carrier (flights.csv)]' role='dimension' type='nominal' />
            <column caption='Dep Delay' datatype='integer' name='[dep_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier (flights.csv)]' derivation='None' name='[none:carrier (flights.csv):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.10xxac50fd7r421c0xwvi05317j9].[none:carrier (flights.csv):nk]' direction='ASC' using='[federated.10xxac50fd7r421c0xwvi05317j9].[avg:dep_delay:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10xxac50fd7r421c0xwvi05317j9].[none:carrier (flights.csv):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10xxac50fd7r421c0xwvi05317j9].[none:carrier (flights.csv):nk]</rows>
        <cols>[federated.10xxac50fd7r421c0xwvi05317j9].[avg:dep_delay:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99600' x='0' y='0'>
              <zone h='78750' id='1' name='Sheet 1' w='99600' x='0' y='21250' />
              <zone h='10750' id='7' type='text' w='99600' x='0' y='0'>
                <formatted-text>
                  <run fontcolor='#454545' fontname='Helvetica Neue' fontsize='14'>Average flight delay time grouped by Carrier</run>
                </formatted-text>
              </zone>
              <zone fixed-size='626' h='10500' id='6' is-fixed='true' name='Sheet 1' pane-specification-id='0' param='[federated.10xxac50fd7r421c0xwvi05317j9].[none:carrier (flights.csv):nk]' type='color' w='99600' x='0' y='10750' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10xxac50fd7r421c0xwvi05317j9].[none:carrier (flights.csv):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10xxac50fd7r421c0xwvi05317j9].[:Measure Names]</field>
            <field>[federated.10xxac50fd7r421c0xwvi05317j9].[avg:dep_delay:qk]</field>
            <field>[federated.10xxac50fd7r421c0xwvi05317j9].[none:carrier (flights.csv):nk]</field>
            <field>[federated.10xxac50fd7r421c0xwvi05317j9].[none:dest:nk]</field>
            <field>[federated.10xxac50fd7r421c0xwvi05317j9].[none:name:nk]</field>
            <field>[federated.10xxac50fd7r421c0xwvi05317j9].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <highlight>
            <color-one-way>
              <field>[federated.10xxac50fd7r421c0xwvi05317j9].[none:carrier (flights.csv):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      lASAEEI0qf8BQ+vAhlHZQ8IAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
